### 示例代码

    from django.contrib.auth.models import User
    from django import forms

    class SignupForm(forms.Form):
        username = forms.CharField(max_length=30)
        email = forms.EmailField()
	password1 = forms.CharField(max_length=30,
				    widget=forms.PasswordInput(render_value=False))
	password2 = forms.CharField(max_length=30,
				    widget=forms.PasswordInput(render_value=False))
				    
	def clean_username(self):
	    try:
	        User.objects.get(username=self.cleaned_data['username'])
	    except User.DoesNotExist:
	        return self.cleaned_data['username']
	    raise form.ValidationError("用户名已经在使用，换一个吧。")
	    
	def clean_password2(self):
	    password1 = self.cleaned_data['password1']
	    password2 = self.cleaned_data['password2']
	    if password1 and password2 and password1 == password2:
	        return password2
	    else:
	        raise form.ValidationError("请输入正确的密码")
		
	def clean(self):
	    if 'password1' in self.cleaned_data and 'password2' in self.cleaned_data:
	    	if self.cleaned_data['password1'] != self.cleaned_data['password2']:
		    raise forms.ValidationError("两次密码不一致")
		else:
		    return self.cleaned_data['password2']
 
	def save(self):
	    # 调用create_user后，用户密码默认会以加密形式存储在数据库中
	    new_user = User.objects.create_user(username=self.cleaned_data['username'],
	    					email=self.cleaned_data['email'],
						password=self.cleaned_data['password2'])
	    return new_user
