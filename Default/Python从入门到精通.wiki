# 从入门到精通

- [[第二章 变量和简单数据类型]] -- 2020-02-04 22:21:20 
- [[第三章 列表简介]] -- 2020-02-04 22:31:03 


2020-02-05 22:08:06 - 2020-02-05 22:29:44 
p30-p37
2020-02-05 22:37:08 - 2020-02-05 22:58:19 
p38-p41


列表组织，通过-1索引来访问列表的最后一个元素（列表为空时出错）

第四章 列表操作
4.1 遍历，使用for
4.2 避免缩进错误
4.3 创建数值列表
使用range()创建数字列表，并对列表执行简单操作
列表解析：要会使用常见的方法
4.4 使用列表的一部分
切片，非常有用，编写游戏时，显示3个最高得分；编写web应用时显示分页等。
l[:] 复制列表
4.5 元组
存储不能被修改的值，其他类似列表

2020-02-06 19:52:48 - 2020-02-06 20:41:04 
p42-p51
4.6 设置代码格式
遵循PEP8
第五章 if语句

2020-02-06 21:12:51 - 2020-02-06 21:54:15 
p51-p60
第六章 字典
遍历字典：遍历所有的键值对for，顺序是随机的；遍历字典中的所有键.keys()；
按顺序遍历字典中的键sorted(d.keys())；遍历字典中的所有值.values()；
字典嵌套
字典列表、字典中存储列表、字典中存储字典

2020-02-07 19:23:04 - 2020-02-07 20:09:43 
p61-p68
第七章 用户输入和while循环
Python2.7请使用`raw_input`代替`input()`
设置标志，条件的判断放在循环中，符合条件设置相应的标志。
`break`可以退出循环
使用while处理列表和字典：在for循环中不应该修改列表，否则将导致
Python难以追踪其中的元素。使用while可在遍历的同时修改，将while循环
同列表和字典结合起来使用，可收集、存储并组织大量输入，供以后查看显示。

2020-02-11 20:37:38 - 2020-02-11 21:31:29 
p68-p79
使用默认值的，在列表形参中必须先列出没有默认值的形参。
每个函数只负责一项具体的工作；更容易扩展和维护。
禁止函数修改列表参数：`l[:]`，传递的是副本。
传递任意数量的实参：`def f(*args)`，python会创建一个args的空元组，将收到
的值全部封装进去。
将函数存储在模块中：几种导入函数的方法。
函数编写指南：
- 每个函数都应包含简单阐述其功能的注释
- 给形参指定默认值时，等号两边不要有空格
- 程序或模块包含多个函数，可使用两个空格将相邻的函数分开

2020-02-12 19:59:53 - 2020-02-12 20:59:58 
p80-p90
类
创建和使用类
继承
Python3版本：
class P():
    pass
class C(P):
    def __init__(self, make, model, year):
        super().__init__(make, model, year)

使用代码模拟实物时，随着添加的细节越来越多，可能需要将一部分作为一个独立
的类提取出来，可以将大型类拆分成多个协同工作的小小类。

导入类

2020-02-13 22:11:13 - 2020-02-13 23:14:10 
p91-p101
从文件读取数据：整个文件读取，逐行读取。
写入文件：换行符，只能写入字符串
异常：
练习

2020-02-14 21:08:53 - 2020-02-14 21:40:27 
p102-p105
练习
测试代码，使用`unittest`中的工具来测试代码。

2020-02-14 21:50:18 - 
p106-p111
项目1 外星人入侵
武装飞船
安装pygame及相关依赖包

2020-02-15 10:26:01 - 2020-02-15 11:11:18 
p112-p114
游戏项目开始
2020-02-15 12:21:30 - 2020-02-15 12:42:32 
p115-p116
重构，将功能放到单独文件：事件处理、刷新屏幕等
2020-02-15 13:46:29 - 2020-02-15 14:10:50 
p116-p123
阅读完内容
2020-02-15 14:11:07 - 2020-02-15 15:46:38 
写代码,
飞船移动，部分代码重构，练习12-3， 12-4
2020-02-15 16:14:58 - 2020-02-15 16:53:52 
射击，创建子弹，发射子弹，限制子弹数量

2020-02-16 10:26:34 - 2020-02-16 10:56:12 
p124-p129
创建外星人，分多行显示
2020-02-16 11:39:54 - 2020-02-16 12:02:49 
p130-p138
检测碰撞，删除碰撞的元素。`pygame.sprite.groupcollide()`
2020-02-16 20:18:12 -
创建外星人，及创建一行外星人

2020-02-17 20:18:36 - 2020-02-17 21:11:04 
创建多行的外星人

2020-02-20 19:44:10 - 2020-02-20 20:37:04 
射杀外星人，用pygame.sprite自带的groupcollide来实现。
要测试将外星人射杀的后，编组为空的情形，可以创建大子弹将外星人全部击落。
飞船与外星人碰撞，游戏统计信息类

2020-02-21 20:32:12 - 2020-02-21 21:04:41 
p136-p144
记分等功能，
添加Play按钮，游戏状态一开始是静止，等待玩家按开始后运行。

2020-02-23 10:41:52 - 2020-02-23 11:33:04 
p140-p146
2020-02-23 16:13:38 - 2020-02-23 16:23:49 
内容看完
准备自己敲代码
2020-02-23 16:24:04 - 2020-02-23 16:42:37 
创建开始按钮
2020-02-24 21:32:44 - 2020-02-24 22:13:45 
提高等级，修改速度、重置速度
2020-02-26 21:49:53 - 2020-02-26 22:34:37 
提高点数
2020-02-27 21:38:10 - 2020-02-27 22:26:29 
显示等级及余下的飞船数
2020-03-01 00:19:18 - 2020-03-01 00:51:48 
保存历史最高分
2020-03-01 11:06:55 - 2020-03-01 11:42:13 
p150-p156
项目2 数据可视化
第15章
安装依赖库：`sudo apt install python3-matplotlib`
`pyplot`包含很多用于生成图表的函数
`pyplot.scatter()`绘制散点图及设置样式
书中练习
2020-03-01 13:46:28 - 2020-03-01 14:20:43 
书中练习p156
自动保存图表，`plt.savefig('squares_plot.png', bbox_inches='tight')`
p157-p164
2020-03-01 17:24:54 - 2020-03-01 17:44:31 
练习
2020-03-01 22:09:56 - 2020-03-01 23:31:45 
练习完成p164
2020-03-02 23:15:42 - 2020-03-02 23:53:05 
第16章 下载数据
p164-p174
分析`csv`格式文件
2020-03-03 23:08:21 - 2020-03-04 00:12:55 
练习到p173
2020-03-04 22:41:47 - 2020-03-04 23:06:28 
p174-p178
阅读
地图模块不在`pygal.i18n`中，而是在`pygal.maps.world`
```python
wm = pygal.maps.Worldmap()
wm.title = 'World Population in 2010'
# cc_population是个存储国家码和人口的字典
wm.add('2010', cc_population)
wm.render_to_file('world_population_2010.svg')
# 设置世界地图的样式
from pygal.styles import RotateStyle
wm_style = RotateStyle('#336699')
wm = pygal.maps.Worldmap(wm_style)
# 加亮颜色主题
from pygal.style import LightColoredStyle
wm_style = RotateStyle('#336699', base_style=LightColoredStyle)
```
2020-03-04 23:06:43 - 2020-03-04 23:19:36 
练习
2020-03-06 22:17:44 - 2020-03-06 22:54:21 

2020-03-06 23:26:29 - 2020-03-07 23:30:17 
阅读：p178-p183
使用API
[查询github上Python项目数](https://api.github.com/search/repositories?q=language:python&sort=stars)
获取API数据的顺序，首先先获取API数据总的情况，将其中的某项挑出来进行研究，
然后遍历所有数据，获取相应的信息。
2020-03-07 21:30:31 - 2020-03-07 21:48:45 
p184-p185
2020-03-07 21:48:51 - 2020-03-07 22:05:01 
2020-03-07 22:15:44 - 2020-03-07 23:01:20 
练习:p178-p184-p185
2020-03-07 23:06:54 - 2020-03-07 23:38:04 
[Hacker News](https://hacker-news.firebaseio.com/v0/topstories.json)

2020-03-12 10:22:53 - 2020-03-12 10:45:40 
p186-p
Web应用程序
`python3 -m venv ll_env`
如果是早期版本，要用`virtualenv`，如何安装：`sudo apt install python-virtualenv`

2020-03-15 11:43:10 - 2020-03-15 11:52:46 
2020-03-15 12:15:09 - 2020-03-15 12:55:45 
p190-p199
创建超级用户`python manage.py createsuperuser`
使用shell访问数据：`python manage.py shell`，可以通过shell来熟悉对存储在项目中的数据进行
访问的Django语法。

2020-03-17 09:28:08 - 2020-03-17 11:00:50 
p199-p211
只需将最高层的数据管理到用户，这样更低层的数据将自动管理到用户。例如，
在项目“学习笔记”中，应用程序的最高层数据是主题，而所有条目都与特定主题
相关联，只要每个主题都归属于特定用户，我们就能确定数据库中每个条目的
所有者。
添加所有者时，可以先通过shell查看关联的用户ID，在使用migrations时，可
以为已经存在的数据设置默认值。
`from django.http import HttpResponseRedirect, Http404`

2020-03-17 12:48:53 - 2020-03-17 13:16:17 
p211-p221
设置程序样式
2020-03-17 14:42:35 - 2020-03-17 15:20:43 
p222-p

2020-03-18 16:20:57 - 2020-03-18 16:56:20 
代码练习
p189-p192
2020-03-19 15:03:30 - 2020-03-19 16:03:56 
p192-p196
2020-03-20 15:44:11 - 2020-03-20 16:57:02 
p196-p202
2020-03-20 20:32:29 - 2020-03-20 20:56:08 
p202-p204
2020-03-20 23:25:40 - 2020-03-21 00:21:53 
p204-p207
用户登录，注册等功能
2020-03-21 22:53:28 - 2020-03-22 00:06:49 
p207-p214
使用bootstrap4美化页面


























