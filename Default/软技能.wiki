# 软技能--代码之外的生存技能

2020-01-04 23:54:16 - 2020-01-05 00:01:52 
2020-01-05 23:26:49 - 2020-01-06 00:22:57 (p19-)

你可曾看到过这样一本书,告诉你在软件开发行业构建自己声望的各个步骤,教会你
如何在身体上、精神上和心灵上更强大、更健康?

p21 你所能犯的最大错误就是相信自己是在为别人工作。这样一来你就对工作的安全感已然尽失。
职业发展的驱动力一定是来自个体本身。记住：工作是属于公司的，而职业生涯却是属于你自己的。
-- 厄尔.南丁格尔

p22
第二章 从非同凡响开始：绝不要做他人都在做的事

- 拥有商业心态
因为只有你开始把自己当作一个企业去思考时，你才能开始做出良好的决策。
提示：这是你职业生涯中必须要做的第一要务：转变你的心态，从被一纸“卖身契”束缚住的仆人
转变为一名拥有自己生意的商人。
（要认清工作和职业生涯的区别，转变思维方式）

- 如何像企业一样思考
要想象企业一样思考，可以先从思考企业由什么构成开始。......你有什么可以卖？你的产品或
服务是什么？（软件从业者所能够提供的服务就是创建软件）

2020-02-16 11:01:30 - 2020-02-16 11:32:11 
p24-p31
第3章 思考你的未来
坐下来，为你的职业生涯设置至少一个大目标；
将大目标分解成相应的若干小目标，例如：月度目标、周目标、日目标
把你的大目标写在每天的必经之地，每日三省吾身。
第4章 人际交往能力：远比你想象的重要
与人打交道：
- 每个人都希望感到自己很重要
- 永远不要批评（一项又一项研究表明，奖励积极行为要比惩罚消极行为有效的多）
- 换位思考（停止用“我”和“我想要什么”来思考。你应当开始思考对他人而言什么
才最重要，什么才是他们最需要的。）
- 避免争吵 （人并不都是从逻辑角度来思考问题的。尽管我们为自己的智慧感到
骄傲，但我们依然是情感动物。）
采取行动：
- 在工作日某天，追踪你跟他人打交道的每一件事。统计下与人交流多少次？
- 读《人性的弱点》这本书，多次读。
- 陷入争吵时，试着认输，果断站在对手一边。

2020-02-22 16:58:45 - 2020-02-22 17:50:30 
p31-p37
第五章 破解面试之道

- 通过面试最快捷的方式

给面试官留下好的印象，创建自己的博客。对想去的公司先进行调研，了解公司
使用的技术，能找到公司人员的博客，交流组等，在其中进行发言，留下印象，
想尽办法与公司内部人员建立联系。
还有就是可以通过公司里面的人推荐你进去，这样在面试时会比较有优势。

- 真正的面试会是什么样？

招聘员工得花费时间和精力，对于雇主：宁愿招这样的人，知道的东西可以少一点，
但是明确知道要做什么，以及怎样去做。从某种程度上，面试时你必须集中精力证明
自己是无需督促也能自发做好事情的员工。

- 当下你能做什么？

你应该做的第一件事是确保自己仍旧保持技术能力。确保自己一直阅读技术书籍和
博客文章，并会花些时间提升自己的能力。
别忘了实践。即便你现在对换新工作毫无兴趣，为了获得面试经验，也要多去尝试。

>> 采取行动：
整理一份清单，列出你想去工作的公司，以及你认识的这些公司的人。
如果清单里有公司你一个人都不认识，那么制定计划去认识至少一位员工，并与之建立联系。
在自己所在领域找出至少一个本地用户组，参加聚会，把自己介绍给尽可能多的人。

第六章 就业选择：列出你的选择

==== 选择1：雇员
好处：稳定、从业之路比较轻松、带薪假期、可能会有医疗保险（在美国）
弊端：缺少自由、收入封顶

==== 选择2：独立咨询师

好处：更大的自由度（自己掌控时间）、可以持续不断地做新项目、赚钱潜力
弊端：自己寻找业务、打理一切事务的开端、从为一个老板服务变成为许多老板服务

==== 选择3：创业者

好处：完全自由、巨大的赚钱潜力、做你想要做的工作、没有老板
弊端：风险很大、完全依靠自己、需要许多其他技能、可能需要长时间工作

>> 采取行动
列出你认识的从事上述三种职业的软件开发人员
与你认识的朋友会面，了解工作情况

第7章 你是哪类软件开发人员

==== 专业化很重要

==== 在一个专业方向上拥有专长

专业化的规则：专业化程度越深，潜在的机会就越少，但获得这些机会的可能性越大。

例如：500个Java开发工作岗位->250个Java Web开发工作岗位->50个针对特定Web开发栈的工作岗位。
通过有针对性地缩小“工作机会池”，提高被录用的机会。

2020-02-22 18:03:19 - 2020-02-22 18:33:16
==== 软件开发人员的专业类别

专业领域：Web开发栈、嵌入式系统、特定的操作系统、移动开发、框架、软件系统

==== 选择你的专业

选择专业的技巧：
- 在你现在或以前工作的公司里，有哪些主要的痛点？你能成为一名专门解决这些痛点的专家吗？
- 有没有一种特定的工作是无人能做，或者缺乏经验丰富的人？成为这个领域的专家加你就会获得大量业务。
- 在各种会议上和用户组中哪些话题最常出现？
- 哪类问题你回复的最多，无论是针对同事还是在Stackoverflow上。

无论你做什么，首先确保你选定了某些专业方向。一定要让它尽可能具体。你会在这个细分
市场上更抢手。

==== 精通多种语言的程序员该怎么办？

先从专业化开始，再拓展分支。

>>> 采取行动
列出你能想到的所有软件开发的专业领域。从广义的范畴将它们逐一细化，看看你能细化到多具体。
你当前的专业领域是什么？如果没有，想想你会选择专供哪个领域。
去主流招聘网站看看自己的专业领域市场行情如何。确定一下，专业化会让你受益还是过度限制你选择。

第8章 公司与公司是不一样的

==== 小公司和创业公司
==== 中等规模的公司
==== 大公司

2020-02-22 19:53:57 - 2020-02-22 20:29:22 

小公司：
优点：承担多种职责，灵活的角色转换 对工作的影响较大 回报潜力大 弊端：没法安静写代码 工作
中等规模公司：
优点：工作稳定 加班少 弊端：变化很慢低下 没有机会使用前沿技术
大公司
优点：完备的流程和规范 培训机会多 大型有影响力的项目 弊端：充斥官僚主义 可能负责代码库一小
部分 很难获得关注

==== 软件开发公司与拥有软件开发人员的公司

应该去软件开发公司，因为另一种的主要业务不是软件开发。

第9章 攀登晋升阶梯

==== 承担责任（脱颖而出的最重要法宝）

==== 引人注目

如何令自己引人注目：
- 每天都记录自己的活动日志--并以周报形式发送给你的经理
- 提供演讲或培训--选择一个对你的团队有用的话题
- 发表意见--只要在会议上就这么做，或者只要你能得到的机会就这么做
- 保证“曝光度”--定期与老板会面，确保你经常被注意到

==== 自学

在职业生涯早起，作者考取了微软认证。
不要只学软件开发，还需要学习领导力、管理和商科的相关知识。

==== 成为问题的解决者

要努力成为那个永远能为各种问题找到解决方案的人，要成为用于执行这些解决方案以获得成果的人。

==== 关于政治

你应该对所在组织的政治气候保持警觉。至少应该知道会发生什么，哪种人需要避开，哪种人永远不
要有交集。

>>>> 采取行动
在当前的工作岗位上，你可以通过何种方式承担更多的职责？
对于你的老板和经理，你现在的“曝光度”如何？下一周可以如何提高自己的“曝光度”？
目前你正在自学些什么？确定要自学的最有价值的东西是什么，制定一份下一年的自学计划。

第10章 成为专业人士

==== 什么是专业人士？

简而言之，专业人士会严肃对待自己的责任和事业，愿意作出艰难的选择去做自己认为正确的事情--
往往还要自己承担代价。

专业人士：遵守自己的原则 专注于正确完成工作 不惧怕承认自己错了，不会文过饰非 持续稳定；
勇于承担责任。
外行：让干什么就干什么；专注于完成工作；不懂装懂；无法预测，不可靠；回避责任。

==== 成为专业人士（养成良好习惯）

为了达到自己在工作中所需的专业化水平,你得明确自己要养成哪种习惯。
时间管理技能。

==== 坚守正道

软件开发人员所要面对的最大的道德挑战就是:以他们了解的决策前行是正确的,也符合客户的最大利
益,但是这样的决定可能会危及自身福祉或职业稳定。

==== 追求品质，完善自我

专业人士是通过持续不断的自我完善达到自己所追求的高品质的。

>>>> 采取行动

你认为自己现在是一名专业人士吗？如果是，为什么？如果不是，又为什么？
你都有哪些习惯？观察自己的一天，尝试找出尽可能多的习惯。把你的习惯分成好和坏。找出一些需要
养成的习惯，制订一份好习惯养成计划。
上次你说 “ 不 ” 是在什么时候?如果你从来没有遇到过这种情况,想想如果你的老板要求你做一些你明
知是错的事情,你会如何应对？


























