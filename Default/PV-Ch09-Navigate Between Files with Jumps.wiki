# Ch09-Navigate Between Files with Jumps

2017-05-31 13:23:05 - 2017-05-31 13:36:31 (p131-p133)

55. Traverse the Jump List. p132

`<C-o>, <C-i>`可以在两个文件之间跳转，前面是往后，后面是往前
`[count]G`跳转到行号，`//pattern<CR>,/?pattern<CR>, n, N`跳转到下一个
或前一个出现匹配的位置；
`%`跳转到匹配的括号
`(,)`跳转到上一个或下一个句子；
`{,}`段落；
`H,M,L`跳转到屏幕的中间，顶部，底部；
`gd`跳转到光标所在文件；
`<C-]>`跳转到光标下定义的关键字；
`'{mark}, \`{mark}`调到标识。

2017-06-01 21:30:37 - 2017-06-01 22:05:31 (p133-p138)
56. Traverse the Change List. p133
`:h changelist`查看帮助文档，`:changes`查看光标移动的记录。
`g;, g,`前一个向后遍历changelist，后一个向前遍历。
'`.'标记最近修改的位置，效果和g;类似，只不过这个命令一直都是changelist最近的依次修改。
'`^'标记最近插入模式修改的位置。'gi'有类似的效果，不过会直接进入插入模式。

57. Jump to the Filename Under the cursor. p134
`gf`跳转到光标所在的文件位置，打开该文件。
为跳转到的文件添加后缀，`:set suffixesadd+=.rb`。
`:h 'path'`设置查找的文件目录，`:set path?`可以查看当前的设置。
`<C-]>`具有相似的角色功能，跳转到光标所在函数的定义位置。

58. Snap Between Files Using Global Marks. p137
`m{letter}`大写字母的话，在整个vim会话期间所有缓存都有效，'`V'返回到标记的文件。
作者建议在深入查看代码之前，在当前编辑位置先设置一个全局标识，待需要从其他位置返回到
当前编辑位置时使用，这就是大写标识的最大用处，也可以使用`<C-o>`来逐步返回到
文件。

