# PV-Ch06 Manage Multiple Files (p77-p92)

2017-05-18 12:35:04 - 2017-05-18 13:23:20 (p77-p83)

tip36介绍vim如何与缓冲列表交互，以及文件与缓存的区别；
tip37介绍如何通过`:args`命令来组合缓存文件成为集合，以便能够浏览或者
对每个文件执行Ex命令。
tip39介绍如何分割工作区，tip40介绍通过vim的tabbed接口，将分割窗口
变成一个集合。

36. Track Open Files with the Buffer List. p77

当我们用vim编辑文件时，实际上编辑的是文件加载到内存中的拷贝？，在
vim的术语中叫缓存。文件存在磁盘上，缓存是在内存当中。
vim可以同时打开多个文件，`:ls`能够查看缓存文件列表，`:bnext`切换到
下一个命令。

'%'符号代表当前窗口可见的缓存，'#'代表后台打开的缓存。`<C-^>`可以进行切换。
四个命令可以用来切换缓存：`:bprev, :bnext, :bfirst, :blast`上一个，下一个，
第一个和最后一个。

`:ls`显式的命令前由编号，通过`:buffer num`可以打开对于的缓存。
`:buffer {bufname}`通过缓存唯一标识的名称来打开缓存。

`:bufdo`可以在缓存列表中执行Ex命令，作者实践中绝对`:argdo`更有用。

`:bdelete, :bd`删除缓存，对文件本身没有影响，接受缓存编号`:ls`查看。

删除缓存费时，要先找到编号，再进行删除。可将工作区分割窗口，标签页，参数列表？

37. Goup Buffers into a Collection with Argument List p80

`:args {arglist}`参数可以包括文件名，匹配字符，甚至是shell的执行结果。

2017-05-19 12:48:14 - 2017-05-19 13:44:24 (p82-p89)
具体应用不是很了解？

38. Manage Hidden Files. 

用vim对文件进行编辑的时候，对文件的修改会存在于buffer中，如果用户没有保存，
就离开修改的文件，这是buffer就会被隐藏。例子：p84
当有hidden buffer未保存时，退出vim会话的时候，会提醒缓存未保存，可以有两种
操作，`:write`保存缓存到文件，`:edit!`重新读取文件，忽略修改。如果有多个文件，
则每次`:quit`的时候，会切换到未保存的文件上。
`:qall!`不管几个缓存，一律退出；`:wall`所有修改都进行保存。
在使用`:argdo {cmd}`时，如果没有设置`hidden`，则无法对缓存列表执行命令，这时
就需要设置hidden，查看`:h hidden`。

39. Divide Your Workspace into Split Windows. p85

分割窗口：
水平分割：`<C-w>s`和`:sp[lit] {file}`，垂直分割：`<C-w>v`和`:vsp[lit] {file}`
如果要在查看一个文件的一部分，同时对另一部分进行修改，就可以使用分割窗口的方式。

窗口切换(:h window-move-cursor)：
`<C-w>W`在打开的窗口中循环切换；
`<C-w>h`切换到左边的窗口；
`<C-w>j`切换到底部窗口；
`<C-w>k`切换到上部窗口；
`<C-w>l`切换到右边窗口。

关闭窗口：
`:cl[ose], <C-w>c`：关闭当前窗口；
`:on[ly], <C-w>o`：保留当前窗口，其余关闭。

调整大小或者切换窗口(:h window-resize)：
`:<C-w>=`：让所有窗口大小一样；
`<C-w>_`：使当前窗口高度最大；
`<C-w>|`：使当前窗口最宽；
`[N]<C-w>_`：当前窗口高度调整为[N]行；
`[N]<C-w>|`：当前窗口高度调整未[N]列。

40. Organize Your Window Layouts with Tab Pages. p89

vim的标签页可以有多个窗口，`:lcd {path}`让我们设置当前窗口的工作目录，
如果创建新的tab页，使用该命令其诶到另一个目录下，这样就可以在不同项目间切换。
该命令之对当前窗口有效而非标签页下的所有窗口。`:windo lcd {path}`能够切换所有
的窗口。

打开标签页：
`:tabedit {filename}`在新标签页下打开filename文件；
`<C-w>T`：将当前窗口移到新的标签页下。

关闭标签页：
`:tabc[lose]`关闭当前标签页下的所有窗口；
`tabo[nly]`关闭其他标签页。

切换标签页：
`:tabn[ext] {N}, {N}gt`换到第N个标签页；
`:tabn[ext], gt`换到下个标签页;
`tabp[revious], gT`换到前一个标签页。

重新排列标签页：
`:tabmove [N]`移动标签到某个位置

